name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  backend:
    name: Backend (FastAPI)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: backend/requirements.txt
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Lint (ruff)
        run: |
          ruff check .
          ruff format --check .
      - name: Type check (mypy)
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: |
          mypy backend/app
      - name: Unit tests
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: |
          pytest -q backend/tests
      - name: Check OpenAPI up-to-date
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: |
          python backend/scripts/generate_openapi.py --out-dir backend/architecture
          git diff --exit-code backend/architecture/openapi.json backend/architecture/openapi.yaml || (echo "OpenAPI spec is outdated. Run generate_openapi.py and commit changes." && exit 1)

  frontend:
    name: Frontend (Vite React)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend/web
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/web/package-lock.json
      - name: Install dependencies
        run: npm ci
      - name: Lint
        run: npm run lint
      - name: Typecheck
        run: npm run typecheck
      - name: Build
        run: npm run build

  aggregate:
    name: Aggregate Status
    runs-on: ubuntu-latest
    needs: [backend, frontend]
    steps:
      - name: Success
        run: echo "All jobs passed"

  e2e-openai:
    name: E2E OpenAI (manual)
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    env:
      RUN_OPENAI_E2E: '1'
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: backend/requirements.txt
      - name: Install dependencies
        working-directory: backend
        run: pip install -r requirements.txt
      - name: Run E2E OpenAI test
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: pytest -q backend/tests/test_e2e_openai_search.py || exit 1
